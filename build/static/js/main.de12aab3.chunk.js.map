{"version":3,"sources":["components/Header/style.js","components/Header/Header.js","components/TodoField/style.js","components/TodoField/TodoField.js","redux/actions.js","redux/types.js","components/TodoList/style.js","components/TodoList/TodoList.js","components/App/style.js","components/App/App.js","redux/rootReducer.js","index.js"],"names":["PageName","styled","h1","Header","TodoFieldWrapper","div","TodoFieldInput","input","attrs","type","placeholder","TodoFieldButton","button","connect","state","inputValue","dispatch","getInputValue","value","addPlanToList","plan","onInput","e","target","onChange","onClick","func","trim","TodoListWrapper","ul","TodoListItem","li","Message","p","plans","deletePlanFromList","plansArr","splice","localStorage","setItem","JSON","stringify","length","map","index","key","className","Container","FixedWrapper","App","initialState","parse","getItem","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gaAEO,IAAMA,EAAWC,IAAOC,GAAV,KCCRC,EAAS,kBAAM,kBAACH,EAAD,c,0gCCDrB,IAAMI,EAAmBH,IAAOI,IAAV,KAoBhBC,EAAiBL,IAAOM,MAAMC,OAAM,iBAAO,CACtDC,KAAM,OACNC,YAAa,sBAFeT,CAAH,KAcdU,EAAkBV,IAAOW,OAAV,KCMbC,eAbS,SAAAC,GACtB,MAAO,CACLC,WAAYD,EAAMC,eAIK,SAAAC,GACzB,MAAO,CACLC,cAAe,SAAAC,GAAK,OAAIF,EC/BrB,SAAuBE,GAC5B,MAAO,CACLT,KCR2B,kBDS3BS,SD4BiCD,CAAcC,KAC/CC,cAAe,SAAAC,GAAI,OAAIJ,ECzBpB,SAAuBI,GAC5B,MAAO,CACLX,KCd4B,mBDe5BW,OACAF,MAAO,IDqByBC,CAAcC,QAInCP,EA1BG,SAAC,GAAgD,IAA/CI,EAA8C,EAA9CA,cAAeE,EAA+B,EAA/BA,cAAeJ,EAAgB,EAAhBA,WAChD,OACE,kBAACX,EAAD,KACE,kBAACE,EAAD,CACEe,QAAS,SAAAC,GAAC,OAAIL,EAAcK,EAAEC,OAAOL,QACrCA,MAAOH,EACPS,SAAU,kBAAMT,KAElB,kBAACJ,EAAD,CAAiBc,QAAS,kBAdXC,EAc6BP,QAdvBD,EAcsCH,GAbrDY,QACRD,EAAKR,EAAMS,SAFK,IAACD,EAAMR,IAcrB,mB,k1BGtBC,IAAMU,EAAkB3B,IAAO4B,GAAV,KAcfC,EAAe7B,IAAO8B,GAAV,KA0BZC,EAAU/B,IAAOgC,EAAV,KCGLpB,eAZS,SAAAC,GACtB,MAAO,CACLoB,MAAOpB,EAAMoB,UAIU,SAAAlB,GACzB,MAAO,CACLmB,mBAAoB,SAACf,EAAMgB,GAAP,OAAoBpB,EHpBrC,SAA4BI,EAAMgB,GAGvC,OAFAA,EAASC,OAAOjB,EAAM,GAEf,CACLX,KCvBiC,wBDwBjC2B,YGeiDD,CAAmBf,EAAMgB,QAI/DvB,EApCE,SAAC,GAAiC,IAAhCqB,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,mBAGxB,OAFAG,aAAaC,QAAQ,QAASC,KAAKC,UAAUP,IAG3C,kBAACN,EAAD,KAEIM,EAAMQ,OACFR,EAAMS,KAAI,SAACvB,EAAMwB,GACjB,OACE,kBAACd,EAAD,CAAce,IAAKD,GACjB,8BAAOxB,GACP,uBACE0B,UAAU,mBACVrB,QAAS,kBAAMU,EAAmBS,EAAOV,UAK/C,kBAACF,EAAD,yC,2RCzBL,IAAMe,EAAY9C,IAAOI,IAAV,KAIT2C,EAAe/C,IAAOI,IAAV,KCCzB,SAAS4C,IACP,OACE,kBAACF,EAAD,KACE,kBAACC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,EAAD,O,mBCRAE,EAAe,CACnBnC,WAAY,GACZmB,MAAOM,KAAKW,MAAMb,aAAac,QAAQ,WAAa,ICAtD,IAAMC,EAAQC,aDGP,WAAoD,IAA/BxC,EAA8B,uDAAtBoC,EAAcK,EAAQ,uCACxD,OAAQA,EAAO9C,MACb,ILb2B,kBKczB,OAAO,eAAIK,EAAX,CAAkBC,WAAYwC,EAAOrC,QACvC,ILd4B,mBKe1B,OAAO,eAAIJ,EAAX,CAAkBoB,MAAM,GAAD,mBAAMpB,EAAMoB,OAAZ,CAAmBqB,EAAOnC,OAAOL,WAAYwC,EAAOrC,QAC7E,ILfiC,wBKgB/B,OAAO,eAAIJ,EAAX,CAAkBoB,MAAM,YAAKqB,EAAOnB,YACtC,QACE,OAAO,eAAItB,OCVjB0C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAACJ,EAAD,QAGJU,SAASC,eAAe,W","file":"static/js/main.de12aab3.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const PageName = styled.h1`\r\n  background: rgba(0, 0, 0, .5);\r\n  color: #ffffff;\r\n  text-align: center;\r\n  padding: 10px 0;\r\n  position: fixed;\r\n  right: 0;\r\n  left: 0;\r\n  top: 0;\r\n`","import React from 'react'\r\nimport {PageName} from './style'\r\n\r\nexport const Header = () => <PageName>Todo</PageName>","import styled from 'styled-components'\r\n\r\nexport const TodoFieldWrapper = styled.div`\r\n  width: 55%;\r\n  position: fixed;\r\n  top: 100px;\r\n  left: 22%;\r\n  right: 22%;\r\n  \r\n  @media screen and (max-width: 960px) {\r\n    width: 70%;\r\n    left: 15%;\r\n    right: 15%;\r\n  }\r\n  \r\n  @media screen and (max-width: 678px) {\r\n    width: 90%;\r\n    left: 5%;\r\n    right: 5%;\r\n  }\r\n`\r\n\r\nexport const TodoFieldInput = styled.input.attrs(() => ({\r\n  type: 'text',\r\n  placeholder: 'Enter your plans'\r\n}))`\r\n  position: relative;\r\n  width: 100%;\r\n  padding: 10px 115px 10px 15px;\r\n  font-size: 16px;\r\n  outline: none;\r\n  border: 2px solid rgba(0, 0, 0, .5);\r\n  border-radius: 10px;\r\n  box-sizing: border-box;\r\n`\r\n\r\nexport const TodoFieldButton = styled.button`\r\n  position: absolute;\r\n  padding: 12px 15px;\r\n  background: rgba(0, 0, 0, .5);\r\n  border-radius: 0 9px 9px 0;\r\n  border: none;\r\n  box-sizing: border-box;\r\n  color: #ffffff;\r\n  right: 0;\r\n  top: 2px;\r\n  outline: none;\r\n  cursor: pointer;\r\n  transition: background-color .3s;\r\n  \r\n  &:hover {\r\n    background: rgba(0, 0, 0, .6);\r\n  }\r\n`","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {getInputValue, addPlanToList} from '../../redux/actions'\r\n\r\nimport {\r\n  TodoFieldWrapper,\r\n  TodoFieldInput,\r\n  TodoFieldButton\r\n} from './style'\r\n\r\nconst addListItem = (func, value) => {\r\n  if (value.trim()) {\r\n    func(value.trim())\r\n  }\r\n}\r\n\r\nconst TodoField = ({getInputValue, addPlanToList, inputValue}) => {\r\n  return (\r\n    <TodoFieldWrapper>\r\n      <TodoFieldInput\r\n        onInput={e => getInputValue(e.target.value)}\r\n        value={inputValue}\r\n        onChange={() => inputValue}\r\n      />\r\n      <TodoFieldButton onClick={() => addListItem(addPlanToList, inputValue)}>Create Plan</TodoFieldButton>\r\n    </TodoFieldWrapper>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    inputValue: state.inputValue\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getInputValue: value => dispatch(getInputValue(value)),\r\n    addPlanToList: plan => dispatch(addPlanToList(plan))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoField)","import {\r\n  ADD_PLAN_TO_LIST,\r\n  DELETE_PLAN_FROM_LIST,\r\n  GET_INPUT_VALUE\r\n} from './types'\r\n\r\nexport function getInputValue(value) {\r\n  return {\r\n    type: GET_INPUT_VALUE,\r\n    value\r\n  }\r\n}\r\n\r\nexport function addPlanToList(plan) {\r\n  return {\r\n    type: ADD_PLAN_TO_LIST,\r\n    plan,\r\n    value: ''\r\n  }\r\n}\r\n\r\nexport function deletePlanFromList(plan, plansArr) {\r\n  plansArr.splice(plan, 1)\r\n\r\n  return {\r\n    type: DELETE_PLAN_FROM_LIST,\r\n    plansArr\r\n  }\r\n}","export const GET_INPUT_VALUE = 'GET_INPUT_VALUE'\r\nexport const ADD_PLAN_TO_LIST = 'ADD_PLAN_TO_LIST'\r\nexport const DELETE_PLAN_FROM_LIST = 'DELETE_PLAN_FROM_LIST'","import styled from 'styled-components'\r\n\r\nexport const TodoListWrapper = styled.ul`\r\n  width: 55%;\r\n  margin: 200px auto 50px;\r\n  box-sizing: border-box;\r\n  \r\n  @media screen and (max-width: 960px) {\r\n    width: 70%;\r\n  }\r\n  \r\n  @media screen and (max-width: 678px) {\r\n    width: 90%;\r\n  }\r\n`\r\n\r\nexport const TodoListItem = styled.li`\r\n  padding: 10px 15px;\r\n  background: rgba(0, 0, 0, .5);\r\n  color: #ffffff;\r\n  list-style: none;\r\n  border-radius: 10px;\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  \r\n  span {\r\n    max-width: 90%;\r\n    white-space: nowrap; \r\n    overflow: hidden; \r\n    text-overflow: ellipsis;\r\n  }\r\n  \r\n  i {\r\n    cursor: pointer;\r\n  } \r\n  \r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nexport const Message = styled.p`\r\n  text-align: center;\r\n`","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {deletePlanFromList} from '../../redux/actions.js'\r\nimport {\r\n  TodoListItem,\r\n  TodoListWrapper,\r\n  Message\r\n} from './style'\r\n\r\nconst TodoList = ({plans, deletePlanFromList}) => {\r\n  localStorage.setItem('state', JSON.stringify(plans))\r\n\r\n  return (\r\n    <TodoListWrapper>\r\n      {\r\n        plans.length\r\n          ? plans.map((plan, index) => {\r\n            return (\r\n              <TodoListItem key={index}>\r\n                <span>{plan}</span>\r\n                <i\r\n                  className=\"fas fa-trash-alt\"\r\n                  onClick={() => deletePlanFromList(index, plans)}\r\n                ></i>\r\n              </TodoListItem>\r\n            )\r\n          })\r\n          : <Message>You didn't plan anything yet</Message>\r\n      }\r\n    </TodoListWrapper>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    plans: state.plans\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    deletePlanFromList: (plan, plansArr) => dispatch(deletePlanFromList(plan, plansArr))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList)","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  font-family: Roboto, sans-serif; \r\n`\r\n\r\nexport const FixedWrapper = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: #ffffff;\r\n  height: 170px;\r\n`","import React from 'react'\nimport {Header} from '../Header'\nimport {TodoField} from '../TodoField'\nimport {TodoList} from '../TodoList'\n\nimport {Container, FixedWrapper} from './style'\n\nfunction App() {\n  return (\n    <Container>\n      <FixedWrapper>\n        <Header/>\n        <TodoField/>\n      </FixedWrapper>\n      <TodoList/>\n    </Container>\n  )\n}\n\nexport {App}\n","import {\r\n  GET_INPUT_VALUE,\r\n  ADD_PLAN_TO_LIST,\r\n  DELETE_PLAN_FROM_LIST\r\n} from './types'\r\n\r\nconst initialState = {\r\n  inputValue: '',\r\n  plans: JSON.parse(localStorage.getItem('state')) || []\r\n}\r\n\r\nexport function rootReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_INPUT_VALUE:\r\n      return {...state, inputValue: action.value}\r\n    case ADD_PLAN_TO_LIST:\r\n      return {...state, plans: [...state.plans, action.plan], inputValue: action.value}\r\n    case DELETE_PLAN_FROM_LIST:\r\n      return {...state, plans: [...action.plansArr]}\r\n    default:\r\n      return {...state}\r\n  }\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {createStore} from 'redux'\r\nimport {App} from './components/App'\r\nimport {Provider} from 'react-redux'\r\nimport {rootReducer} from './redux/rootReducer'\r\n\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App/>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}